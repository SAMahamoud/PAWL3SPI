<?php

namespace Bl\BibliothequeBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * LivreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LivreRepository extends EntityRepository
{
 /**
     * Retourne la liste des Livres correspondant au genre passé en paramètre (id)
     * Si aucun genre n'est spécifié, la liste de tous les livres est renvoyée.
     * @param int $idGenre Id du genre à rechercher
     * @return Bl\Bundle\BibliothequeBundle\Entity\Livre[] Liste des livres du genre demandé
     */
    public function findByGenre($idGenre = 0)
    {
        /* Création de la requète avec le query builder */
        $queryBuilder = $this->_em->createQueryBuilder();
        $queryBuilder->select("f, g")
                     ->from("BlBibliothequeBundle:Livre", "f")
                     ->leftJoin("f.listeDesGenres", "g");

        /* Si on reçoit un id de genre valide alors on recherche les Livres de ce genre là uniquement */
        if ((int)$idGenre > 0) {
            $queryBuilder->where("g.id=:idGenre")->setParameter("idGenre", (int)$idGenre);
        }
        /* Puis on retourne la liste des livres du genre demandé */
        return $queryBuilder->getQuery()->getResult();
    }

    /**
     * Retourne le nombre de livre au total
     * @return int Renvoie le nombre de livres total
     */
    public function countAll()
    {
        /*
         * On aurait tendance à vouloir faire un count() d'un fetchAll() sur le LivreRepository()
         * Cette solution foncitonne mais demande à doctrine de charger toutes les données en mémoire.
         * Si on a des milliers de livres, doctrine va alors créer des milliers d'objets Livre dans la ram
         * ce qui n'est pas du tout optimisé.
         * 
         * En faisant un count comme ceci, aucune données n'est chargée en mémoire, une simple requête sql est 
         * lancée et le nombre est alors renvoyé.
         */

        /* Création de la requète count avec le query builder */
        $queryBuilder = $this->_em->createQueryBuilder();
        $queryBuilder->select("count(f) as total")
                     ->from("BlBibliothequeBundle:Livre", "f");

        /**
        * Comme le seul résultat qui nous intéresse est le count et pas du tout l'entité,
        * On utilise getSingleScalarResult() afin de renvoyer une valeur scalaire unique
        */
        return $queryBuilder->getQuery()->getSingleScalarResult();
    }

}
